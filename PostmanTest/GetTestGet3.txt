https://localhost:44302/api/WeatherObservations/


//All test expects that HttpGET https://localhost:44302/api/WeatherObservations/seed
//has been called and populated the database

pm.test("Status code is 200", function(){
    pm.response.to.have.status(200);
});

pm.test("Response is an array", function(){
    let res = pm.response.json();
    pm.expect(res).to.be.an('array');
});

pm.test("Response data holds 3 observations", function(){
    let res = pm.response.json();
    pm.expect(res).to.have.lengthOf(3);
});

//Check correct type of name
pm.test("Property 'Name' is a string", function(){
    let res = pm.response.json();
    pm.expect(res[0].name).to.be.a('string');
});

pm.test("Name is 'Det Kgl. Bibliotek - Aarhus'", function(){
    let res = pm.response.json();
    pm.expect(res[0].name).to.equal('Det Kgl. Bibliotek - Aarhus');
    pm.expect(res[1].name).to.equal('Det Kgl. Bibliotek - Aarhus');
    pm.expect(res[2].name).to.equal('Det Kgl. Bibliotek - Aarhus');
});

pm.test("Property 'Date' is a string", function(){
    let res = pm.response.json();
    pm.expect(res[0].date).to.be.a('string');
});

pm.test("Response is ordered by descending", function(){
    let res = pm.response.json();
    date1 = Date.parse(res[0].date);
    date2 = Date.parse(res[1].date);
    date3 = Date.parse(res[2].date);

    pm.expect(date1).to.be.above(date2);
    pm.expect(date2).to.be.above(date3);
});

pm.test("Property 'Temperature' is a number", function(){
    let res = pm.response.json();
    pm.expect(res[0].temperature).to.be.a('number');
});

pm.test("'Temperature' has correct value", function(){
    let res = pm.response.json();
    pm.expect(res[0].temperature).to.equal(19.3);
    pm.expect(res[1].temperature).to.equal(18.7);
    pm.expect(res[2].temperature).to.equal(17.2);    
});

pm.test("Property 'Humidity' is a number", function(){
    let res = pm.response.json();
    pm.expect(res[2].humidity).to.be.a('number');
});

pm.test("'Humidity' has correct value", function(){
    let res = pm.response.json();
    pm.expect(res[0].humidity).to.equal(21);
    pm.expect(res[1].humidity).to.equal(20);
    pm.expect(res[2].humidity).to.equal(24); 
});

pm.test("Property 'Pressure' is a number", function(){
    let res = pm.response.json();
    pm.expect(res[0].pressure).to.be.a('number');
});

pm.test("'Pressure' has correct value", function(){
    let res = pm.response.json();
    pm.expect(res[0].pressure).to.equal(17.8);
    pm.expect(res[1].pressure).to.equal(16.9);
    pm.expect(res[2].pressure).to.equal(12.2); 
});

pm.test("Property 'Latitude' is a number", function(){
    let res = pm.response.json();
    pm.expect(res[0].latitude).to.be.a('number');
});

pm.test("'Latitude' has correct value", function(){
    let res = pm.response.json();
    pm.expect(res[0].latitude).to.equal(56.170295);
    pm.expect(res[1].latitude).to.equal(56.170295);
    pm.expect(res[2].latitude).to.equal(56.170295); 
});

pm.test("Property 'Longitude' is a number", function(){
    let res = pm.response.json();
    pm.expect(res[0].longitude).to.be.a('number');
});

pm.test("'Longitude' has correct value", function(){
    let res = pm.response.json();
    pm.expect(res[0].longitude).to.equal(10.199121);
    pm.expect(res[1].longitude).to.equal(10.199121);
    pm.expect(res[2].longitude).to.equal(10.199121); 
});
